create TABLE IF NOT EXISTS MPA_RATING
(
    RATING_ID   BIGINT  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    NAME VARCHAR NOT NULL,
    CONSTRAINT MPA_RATING_pk PRIMARY KEY (RATING_ID)
);
create TABLE IF NOT EXISTS FILMS
(
    FILM_ID       BIGINT  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    NAME          VARCHAR NOT NULL,
    DESCRIPTION   VARCHAR(200),
    RELEASE_DATE  DATE,
    DURATION      Integer,
    MPA_RATING_ID BIGINT,
    CONSTRAINT FILMS_pk PRIMARY KEY (FILM_ID),
    CONSTRAINT FILMS_fk FOREIGN KEY (MPA_RATING_ID) REFERENCES MPA_RATING (RATING_ID) ON delete RESTRICT ON update CASCADE
);
create TABLE IF NOT EXISTS GENRE
(
    GENRE_ID   BIGINT  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    NAME VARCHAR NOT NULL,
    CONSTRAINT GENRE_pk PRIMARY KEY (GENRE_ID)
);
create TABLE IF NOT EXISTS USERS
(
    USER_ID       BIGINT  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    NAME     VARCHAR,
    EMAIL    VARCHAR NOT NULL,
    LOGIN    VARCHAR NOT NULL,
    BIRTHDAY DATE,
    CONSTRAINT USERS_pk PRIMARY KEY (USER_ID)
);
create TABLE IF NOT EXISTS GENRE_ID
(
    ID       BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    FILM_ID  BIGINT NOT NULL,
    GENRE_ID BIGINT NOT NULL,
    CONSTRAINT GENRE_ID_pk PRIMARY KEY (ID),
    CONSTRAINT GENRE_ID_fk FOREIGN KEY (GENRE_ID) REFERENCES GENRE (GENRE_ID) ON delete RESTRICT ON update CASCADE,
    CONSTRAINT GENRE_ID_fk_1 FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON delete CASCADE ON update CASCADE
);
create TABLE IF NOT EXISTS FRIENDS
(
    FRIENDS_ID        BIGINT  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    USER_ID   BIGINT  NOT NULL,
    FRIEND_ID BIGINT  NOT NULL,
    STATUS    BOOLEAN NOT NULL,
    CONSTRAINT FRIENDS_pk PRIMARY KEY (FRIENDS_ID),
    CONSTRAINT FRIENDS_ID_fk FOREIGN KEY (FRIEND_ID) REFERENCES USERS (USER_ID) ON delete CASCADE ON update CASCADE,
    CONSTRAINT USER_ID_fk FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON delete CASCADE ON update CASCADE
);
create TABLE IF NOT EXISTS FILM_LIKE
(
    LIKE_ID      BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    FILM_ID BIGINT NOT NULL,
    USER_ID BIGINT NOT NULL,
    CONSTRAINT LIKE_ID_pk PRIMARY KEY (LIKE_ID),
    CONSTRAINT FILM_ID_fk FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON delete CASCADE ON update CASCADE
);
create TABLE IF NOT EXISTS EVENTS
(
    EVENT_ID BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    TIMESTAMP BIGINT NOT NULL,
    USER_ID BIGINT NOT NULL,
    EVENT_TYPE VARCHAR NOT NULL,
    EVENT_OPERATION VARCHAR NOT NULL,
    ENTITY_ID BIGINT NOT NULL,
    CONSTRAINT EVENT_ID_pk PRIMARY KEY (EVENT_ID),
    CONSTRAINT EVENT_USER_ID_fk FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON delete CASCADE ON update CASCADE
);